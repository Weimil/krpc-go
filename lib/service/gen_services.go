//go:build ignore

package main

import (
	"context"
	"fmt"
	"log"
	"os"
	"strings"

	"github.com/atburke/krpc-go/internal"
	"github.com/atburke/krpc-go/lib/client"
	"github.com/atburke/krpc-go/lib/gen"
	"github.com/dave/jennifer/jen"
)

const genWarning = "Code generated by gen_services.go. DO NOT EDIT."

func main() {
	ctx := context.Background()
	client := client.NewKRPCClient(client.KRPCClientConfig{
		RPCOnly: true,
	})
	if err := client.Connect(ctx); err != nil {
		log.Fatalf("Failed to connect to server. Is KSP running with a kRPC server?\n%v", err)
	}
	krpc := internal.NewBasicKRPC(client)
	services, err := krpc.GetServices()
	if err != nil {
		log.Fatal(err)
	}

	for _, service := range services.Services {
		serviceName := strings.ToLower(service.Name)
		f := jen.NewFile(serviceName)
		fmt.Printf("Generating service %q\n", service.Name)
		f.Comment(genWarning)
		f.Line()

		if err := gen.GenerateService(f, service); err != nil {
			log.Fatal(err)
		}
		dest := fmt.Sprintf("%v/%v.gen.go", serviceName, serviceName)
		if err := os.MkdirAll(serviceName, os.ModeDir); err != nil {
			log.Fatal(err)
		}
		fmt.Printf("Writing service definition to %v\n", dest)
		if err := f.Save(dest); err != nil {
			log.Fatal(err)
		}
	}
}
